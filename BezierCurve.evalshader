#version 440 core

layout (isolines, equal_spacing, ccw) in;

uniform mat4 matModelView;
uniform mat4 matProjection;

vec3 evalBezier(float u, vec3 p0, vec3 p1, vec3 p2, vec3 p3, vec3 p4) {
    float B0 = (1.-u)*(1.-u)*(1.-u)*(1.-u);
    float B1 = 4.*u*(1.-u)*(1.-u)*(1.-u);
    float B2 = 6.*u*u*(1.-u)*(1.-u);
    float B3 = 4.*u*u*u*(1.-u);
    float B4 = u*u*u*u;

    vec3 p = B0*p0 + B1*p1 + B2*p2 + B3*p3 + B4*p4;
    return p;
}

void main() {
    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;

    vec3 p0 = vec3(gl_in[0].gl_Position);
    vec3 p1 = vec3(gl_in[1].gl_Position);
    vec3 p2 = vec3(gl_in[2].gl_Position);
    vec3 p3 = vec3(gl_in[3].gl_Position);
    vec3 p4 = vec3(gl_in[4].gl_Position);
    vec4 pos = vec4(evalBezier(u, p0, p1, p2, p3, p4), 1.);
    gl_Position = matProjection * matModelView * pos;
}
